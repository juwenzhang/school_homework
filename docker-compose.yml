version: '3.8'

networks:
  blog-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  nacos-data:

# 基础设施服务
services:
  # PostgreSQL数据库
  postgres:
    image: postgres:14-alpine
    container_name: blog-postgres
    environment:
      POSTGRES_USER: blog_user
      POSTGRES_PASSWORD: blog_password
      POSTGRES_DB: blog_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - blog-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blog_user -d blog_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: blog-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nacos服务注册与配置中心
  nacos:
    image: nacos/nacos-server:v2.2.3
    container_name: blog-nacos
    environment:
      MODE: standalone
      NACOS_AUTH_ENABLE: 'false'
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    volumes:
      - nacos-data:/home/nacos/data
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/v1/console/health/readiness"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端微服务
  common:
    build:
      context: ./backend
      dockerfile: ./common/Dockerfile
    container_name: blog-common
    depends_on:
      nacos:
        condition: service_healthy
    networks:
      - blog-network
    # common模块通常是一个库，不需要独立运行，这里只是为了构建

  api-gateway:
    build:
      context: ./backend
      dockerfile: ./api-gateway/Dockerfile
    container_name: blog-api-gateway
    ports:
      - "8080:8080"
    depends_on:
      nacos:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - blog-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER-ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_CONFIG_SERVER-ADDR=nacos:8848
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build:
      context: ./backend
      dockerfile: ./user-service/Dockerfile
    container_name: blog-user-service
    ports:
      - "8081:8081"
    depends_on:
      nacos:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - blog-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER-ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_CONFIG_SERVER-ADDR=nacos:8848
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/blog_db
      - SPRING_DATASOURCE_USERNAME=blog_user
      - SPRING_DATASOURCE_PASSWORD=blog_password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  blog-service:
    build:
      context: ./backend
      dockerfile: ./blog-service/Dockerfile
    container_name: blog-blog-service
    ports:
      - "8082:8082"
    depends_on:
      nacos:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - blog-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER-ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_CONFIG_SERVER-ADDR=nacos:8848
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/blog_db
      - SPRING_DATASOURCE_USERNAME=blog_user
      - SPRING_DATASOURCE_PASSWORD=blog_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  monitor-service:
    build:
      context: ./backend
      dockerfile: ./monitor-service/Dockerfile
    container_name: blog-monitor-service
    ports:
      - "8083:8083"
    depends_on:
      nacos:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - blog-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER-ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_CONFIG_SERVER-ADDR=nacos:8848
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/blog_db
      - SPRING_DATASOURCE_USERNAME=blog_user
      - SPRING_DATASOURCE_PASSWORD=blog_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-service:
    build:
      context: ./backend
      dockerfile: ./admin-service/Dockerfile
    container_name: blog-admin-service
    ports:
      - "8084:8084"
    depends_on:
      nacos:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - blog-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER-ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_CONFIG_SERVER-ADDR=nacos:8848
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/blog_db
      - SPRING_DATASOURCE_USERNAME=blog_user
      - SPRING_DATASOURCE_PASSWORD=blog_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3